# .github/workflows/scheduled-scraper.yml

name: TamaHome Daily Job

on:
  schedule:
    - cron: '0 21 * * *' # 毎日 UTC 21:00 (JST 6:00)

  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - scrape_only
          - analyze_only
          - visualize_only
          - setup_db
      force_update:
        description: 'Force update office data (applies to `all` and `scrape_only`)'
        type: boolean
        default: false

jobs:
  run-tasks:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache and Install dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install Python & System Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y libgl1

      - name: Run Python Script
        run: |
          # 実行するコマンドを構築
          COMMAND="python main_scraper.py"
          
          # 手動実行時のタスク選択を反映
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            case "${{ github.event.inputs.task }}" in
              scrape_only)
                COMMAND="$COMMAND --scrape-only"
                ;;
              analyze_only)
                COMMAND="$COMMAND --analyze-only"
                ;;
              visualize_only)
                COMMAND="$COMMAND --visualize-only"
                ;;
              setup_db)
                COMMAND="$COMMAND --setup-db"
                ;;
            esac
          fi
          
          # 強制更新フラグを追加
          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            COMMAND="$COMMAND --force-update"
          fi
          
          echo "Executing command: $COMMAND"
          $COMMAND

      - name: Upload Report Artifacts
        # ★★★★★★★★★★ ここからが修正箇所 ★★★★★★★★★★
        if: success() && (github.event.inputs.task == 'all' || github.event.inputs.task == 'visualize_only' || github.event_name == 'schedule')
        uses: actions/upload-artifact@v4
        with:
          name: daily-analysis-report
          # 'output' ディレクトリ全体をアップロードする
          path: ./output/
          if-no-files-found: error
